AWSTemplateFormatVersion: 2010-09-09
Description: Creates a stack of resources for the moodle reference architecture 

Parameters:

 
Resources:

# Route 53
BasicRoute53HostedZone:
    Type: 'AWS::Route53::HostedZone'
    Properties:
      HostedZone:
        Comment: Registers moodle practice domain on Route53 for routing
        Name: www.moodlepractice.com
  BasicRoute53RecordSet:
    Type: 'AWS::Route53::RecordSet'
    Properties:
      Name: www.moodlepractice.com
      HostedZoneId: !GetAtt 
        - BasicRoute53HostedZone
        - ID
      Type: A
      TTL: '300'
      # Update the tagret Resource 
      ResourceRecords:
        - 192.0.2.99



#VPC
MainVPC:
  Type: AWS::EC2::VPC
  Properties: 
    CidrBlock: 10.0.0.0/18
    EnableDnsHostnames: "true"
    EnableDnsSupport: "true"
    Tags: 
      - Tag

  #Subnet
  VPCSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MainVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "us-east-1a"
      Tags:
      - Key: Environment
        Value: Test

  VPCSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MainVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-east-1b"
      Tags:
      - Key: Environment
        Value: Test


  # Security Group
  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: custom security group for EC2 app servers
      GroupName: test-EC2-Resources
      VpcId: !Ref VPC

      #Ingress Rules
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Ingress rules for EC2 app servers to allow connections from the internet on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      Tags:
        - Key: Environment
          Value: Test


  EFSSecurityGroup:
  Type: 'AWS::EC2::SecurityGroup'
  Properties:
    GroupDescription: custom security group for EFS Mount Targets
    GroupName: test-EFS-Resources
    VpcId: !Ref VPC

    #Ingress Rules
    SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        Description: Ingress rules for EFS Mount targets to allow connections from the the EC2 instances on port 2049
        FromPort: 2049
        IpProtocol: tcp
        ToPort: 2049
    Tags:
      - Key: Environment
        Value: Test

  
  # EC2 App Servers on  - Free tier eligble
  EC2Instance1: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-0f924dc71d44d23e2"
      KeyName: "testkey"
      SubnetId: !Ref VPCSubnet1
      InstanceType: t2.micro
      AvailabilityZone: "us-east-1a"


  EC2Instance2: 
    Type: AWS::EC2::Instance
    Properties: 
      ImageId: "ami-0f924dc71d44d23e2"
      KeyName: "testkey"
      SubnetId: !Ref VPCSubnet2
      InstanceType: t2.micro
      AvailabilityZone: "us-east-1b"


  # EFS 
  EFSFileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      BackupPolicy:
        Status: DISABLED
      Encrypted: true
      LifecyclePolicies:
        - TransitionToIA: AFTER_60_DAYS
      PerformanceMode: generalPurpose
      ThroughputMode: bursting
      FileSystemTags:
        - Key: Environment
          Value: test


  # EFS Mount Targets
  MountTarget1:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SecurityGroups:
        - !Ref EFSSecurityGroup
      SubnetId: !Ref VPCSubnet1


  MountTarget2:
    Type: 'AWS::EFS::MountTarget'
    Properties:
      FileSystemId: !Ref EFSFileSystem
      IpAddress: 192.1.1.1
      SecurityGroups:
        - !Ref EFSSecurityGroup
      SubnetId: !Ref VPCSubnet2

      
Outputs:
  EFS:
    Description: The created EFS
    Value: !Ref EFSFileSystem
  EFSMountTarget1:
    Description: The EFS MountTarget1
    Value: !Ref MountTarget1
  EFSMountTarget2:
    Description: The EFS MountTarget2
    Value: !Ref MountTarget2
  EFSMountTarget3:
    Description: The EFS MountTarget3
    Value: !Ref MountTarget3
  EFSMountTarget4:
    Description: The EFS MountTarget4
    Value: !Ref MountTarget4
